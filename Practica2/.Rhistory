library(actuar)
dgamma(1:2, shape=2, rate=3/2)
pgamma(1:2, shape=2, rate=3/2)
qgamma(1/2, shape=2, rate=3/2)
set.seed(1)
rgamma(5, shape=2, rate=3/2)
f <- function(x) dgamma(x,2)
f1 <- function(x) f(x-1)
f2 <- function (x) f(x/2)/2
f3 <- function (x) 2*x*f(x^2)
f4 <- function (x) f(1/x)/x^2
f5 <- function (x) f(exp(x))*exp(x)
f6 <- function (x) f(log(x))/x
x=seq(0,10, by=.025)
plot(x,f(x), ylim=c(0, 1.3), xlim=c(0, 10), main= "Densidades te?ricas",
lwd=2, type="l", xlab="x", ylab="")
lines(x, f1(x), lty=2, lwd=2)
lines(x, f2(x), lty=3, lwd=2)
lines(x, f3(x), lty=4, lwd=2)
lines(x, f4(x), lty=1, col="blue", lwd=2)
lines(x, f5(x), lty=2, col="green", lwd=2)
lines(x, f6(x), lty=3, col="red", lwd=2)
legend("topright", lty=1:4, col = c(rep("black",4), "blue",
"green", "red"),
leg=c("X", "X+1", "2X", "sqrt(X)", "1/X", "log(x)", "exp(x)"))
set.seed (123)
x <- rgamma(100,2) #Si omitimos el par?metro escala, se asume que es 1
x
x1 <- (x+1)
x2 <- 2*x
x3 <- sqrt(x)
x4 <- 1/x
x5 <- log(x)
x6 <- exp(x)
x=seq(0,10, by=.025)
plot(density(x), ylim=c(0, 1), xlim=c(0, 10), main="Densidades emp?ricas",
lwd=2, xlab="x", ylab="f_X(x)")
lines(density(x1), lty=2, lwd=2)
lines(density(x2), lty=3, lwd=2)
lines(density(x3), lty=4, lwd=2)
lines(density(x4), lty=1, col="blue", lwd=2)
lines(density(x5), lty=2, col="green", lwd=2)
lines(density(x6), lty=3, col="red", lwd=2)
legend("topright", lty=1:4, col = c(rep("black",4), "blue","green", "red"),
leg=c("X", "X+1", "2X", "sqrt(X)", "1/X", "log(x)", "exp(x)"))
dgamma(1:2, shape=2, rate=3/2)
pgamma(1:2, shape=2, rate=3/2)
qgamma(1/2, shape=2, rate=3/2)
set.seed(1)
rgamma(5, shape=2, rate=3/2)
qgamma(1/2, shape=2, rate=3/2)
dgamma(1:2, shape=2, rate=3/2)
pgamma(1:2, shape=2, rate=3/2)
qgamma(1/2, shape=2, rate=3/2) #Nos da el valor de la distribución total de probabilidad
#DISTRIBUCION POISSON
#Generar muestra de n=100 Lambda=0.9
x= rpois(100, 0.9)
rpois(100,0.9)
hist(x,probability=T)  #Histograma
mean (x)  #calculo de la media
var(x)  #calculo de la varianza
sd(x)  #calculo de desviaci?n t?pida
sqrt(var(x))
median(x)
quantile(x,probs=c(0.05, 0.95))
quantile(x,seq(0,1, 0.20)) #calculo de quintiles
quantile(x,seq(0.9,1, 0.01))  #Calculo de percentiles del 90-100
summary(x)
dpoisZM <- function(x, prob, lambda)
prob*(x == 0) + (1-prob)*(x >0)*dpois(x-1, lambda)
ppoisZM <- function(q, prob, lambda)
prob*(q >= 0) + (1-prob)*(q > 0)*ppois(q-1, lambda)
qpoisZM <- function(p, prob, lambda)
ifelse(p <=prob, 0, a+qpois((p-prob)/(1-prob), lamda))
rpoisZM <- function(n, prob, lambda)
x <- rpoisZM(100, 1/2, 3)
plot(ecdf(x), main="F. distribucion Poisson truncada")
lines(z <- sort(c(0:12, 0:12-1e-6)),
ppoisZM(z, 1/2, 3), col="blue", lty=4, lwd=2)
legend("bottomright", lty=c(1,4), lwd=1:2,
col=c("black", "blue"), leg=c("empir?rica", "te?rica"))
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
library(moments)
library(MASS)
library(actuar)
library(ggplot2)
library(fitdistrplus)
data("danishuni")
View(danishuni)
View(danishuni)
x<- data("danishuni")
dim(x)
summary(data)
x<- data("danishuni") #Tenemos 2167 observaciones con dos variables
summary(x)
x<- data("danishuni") #Tenemos 2167 observaciones con dos variables
summary(x)
data("danishuni") #Tenemos 2167 observaciones con dos variables
head(danishuni)
x<- danishuni$Loss
boxplot(x)
x<- danishuni$Loss
boxplot(x)
ggplot(danishuni) + geom_point(data= X)
ggplot(danishuni) + geom_point(data= x)
data("danishuni") #Tenemos 2167 observaciones con dos variables
head(danishuni)
x<- danishuni$Loss
boxplot(x) #Valores muy concentrados en el priemr cuartil y valores extremos muy dispersos en el último, lo cual es muy ASIMETRÍA
ggplot(danishuni) + geom_point(data= x)
ggplot(danishuni) + geom_density(x)
ggplot(danishuni) + geom_density(aaes(x))
ggplot(danishuni) + geom_density(aes(x))
hist(x)
ggplot(danishuni) + geom_density(aes(x))
ggplot(danishuni)+ boxplot(x)
summary(x)
skewness(x)
kurtosis(x)
ggplot(danishuni) + geom_density(aes(x))
fgam<- fitdist(x, 'gamma',lower=0)
fgam
fpar<- fitdist(X, 'pareto', start= list(shape=2, scale=2), lower= 0)
fpar<- fitdist(x, 'pareto', start= list(shape=2, scale=2), lower= 0)
fpar
plot(fgam)
plot(fpar)
fmixgampar
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
dmixgampar()
dmixgampar
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
#PAquetes que vamos a necesitar
library(moments)
library(MASS)
library(actuar)
library(fitdistrplus)
library(ggplot2)
####################
#Gr?fico de la Funci?n de distribuci?n
#BD de perdidas
data(danishuni)
head(danishuni)
x <-danishuni$Loss
summary(x)
skewness(x)  #coef. de asimetria - Asimetria positiva o la dcha
kurtosis(x)  #coef. de curtosis  - Leprtoc?rtica o mas apuntada Normal
hist(x, pch=10, breaks=50, prob=TRUE, main="Fraudes",
xlab =" X", ylab = "Densidad")
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
fgam <- fitdist(x, "gamma", lower=0)
fgam
fpar <- fitdist(x, "pareto", start=list(shape=2, scale=2), lower=0)
fpar
fmixgampar <- fitdist(x, "mixgampar",
start=list(prob=1/2, nu=1, lambda=1, alpha=2,
theta=2), lower=0)
fmixgampar
cbind(SINGLE= c(NA, fgam$estimate, fpar$estimate),
MIXTURE=fmixgampar$estimate)
fburr <- fitdist(x, "burr", start=list(shape1=2, shape2=2, scale=2),
lower=c(0.1,1/2, 0))
fburr$estimate
FDD=cdfcomp(list(fgam, fpar, fmixgampar, fburr), xlogscale=TRUE,
ylab = "Probabilidad", datapch=".",
datacol="red", fitcol="black", fitlty=2:5,
legendtext=c("gamma","Pareto", "Par-gam", "Burr"),
main="Ajuste p?rdidas legales", plotstyle = "ggplot")
FDD
hist(x, pch=10, breaks=100, prob=TRUE, main="PERDIDAS LEGALES EN EUROS",
xlab =" X", ylab = "Densidad")
curve(dburr(x, fburr$estimate[1],fburr$estimate[2], fburr$estimate[3]),
col="red", lwd=2, add=T)
## qqplot con normal
qqnorm(x)
qqline(x, col="red")
qmixgampar <- function(p, prob, nu, lambda, alpha, theta)
{L2 <- function(q, p)
(p - pmixgampar(q, prob, nu, lambda, alpha, theta))^2
sapply(p, function(p) optimize(L2, c(0, 10^3), p=p)$minimun)
}
ppcomp(list(fgam, fpar, fmixgampar, fburr), xlogscale=TRUE, ylogscale=TRUE,
ylab="probabilidades emp?ricas", xlab="probabilidades te?ricas", fitcol="blue",
main="PP-plot sobre p?rdidas", legendtext=c("gamma", "Pareto", "Par-gam", "Burr"),
plotstyle = "ggplot", fitpch=1:4)
qqcomp(list(fgam, fpar, fmixgampar, fburr), xlogscale=TRUE, ylogscale=TRUE,
ylab="cuantiles emp?ricos", xlab="cuantiles te?ricos",
fitcol="black", main="QQ-plot sobre p?rdidas", addlegend = TRUE,
legendtext=c("gamma", "Pareto","Par-gam", "Burr"), fitpch=1:4)
p <- c(.9, .95, .975, .99)
rbind(empirica= quantile(danishuni$Loss, prob=p),
gamma= quantile(fgam, prob=p)$quantiles,
Pareto= quantile(fpar, prob=p)$quantiles,
Pareto_gamma= quantile(fmixgampar, prob=p)$quantiles,
Burr= quantile(fburr, prob=p)$quantiles)
compmom <- function(order)
c(empirical= sum(danishuni$Loss^order)/length(x),
gamma=mgamma(order, fgam[[1]][1], fgam[[1]][2]),
Pareto=mpareto(order, fpar[[1]][1], fpar[[1]][2]),
Pareto_gamma= as.numeric(fmixgampar[[1]][1]*
mgamma(order, fmixgampar[[1]][2], fmixgampar[[1]][3])+
(1-fmixgampar[[1]][1])*
mpareto(order, fmixgampar[[1]][4], fmixgampar$estimate[5])),
Burr=mburr(order, fburr[[1]][1], fburr[[1]][2], fburr[[1]][3]))
rbind(Mean=compmom(1), Mom2nd= compmom(2))
descdist(danishuni$Loss,discrete = FALSE, boot =100, method = "unbiased",
graph = TRUE, obs.col = "blue", obs.pch = 16, boot.col = "red")
fmixgampar <- fitdist(x, "mixgampar",
start=list(prob=1/2, nu=1, lambda=1, alpha=2,
theta=2), lower=0)
fmixgampar
x<- read.csv('BD_BUSINESS UNIT (1)BD_BUSINESS UNIT (1)', header = FALSE, sep = ';')
str(x)
x<- read.csv('BD_BUSINESS UNIT (1)BD_BUSINESS UNIT (1)', header = FALSE, sep = ';')
x<- read.csv('BD_BUSINESS UNIT (1)BD_BUSINESS UNIT (1).csv', header = FALSE, sep = ';')
x<- read.csv('BD_BUSINESS UNIT (1)BD_BUSINESS UNIT (1).csv', header = FALSE, sep = ';')
x<- read.csv('BD_BUSINESS UNIT (1).csv', header = FALSE, sep = ';')
str(x)
View(x)
View(x)
str(x)
View(x)
View(x)
names(x)[1]= paste('PERDIDAS')
View(x)
View(x)
class(x$PERDIDAS)
y<- x$PERDIDAS
hist(x)
hist(y)
boxplot(y)
summary(y)
ggplot(x)+ geom_density(aes(y))
ggplot(x)+ geom_density(aes(y), stat='density')
skewness(y)
kurtosis(y)
fgam<-fitdist(y, 'gamma',lower=0)
fgam
plot(fgam)
fpar<- fitdist(y, 'pareto', start= list(shape=2, scale=2), lower= 0)
fpar
plot(fpar)
library(moments)
library(MASS)
library(actuar)
library(ggplot2)
library(fitdistrplus)
fpar<- fitdist(y, 'pareto', start= list(shape=2, scale=2), lower= 0)
fpar
hist(y, pch=10, breaks=50, prob=TRUE, main="Perdidas_economicas",
xlab =" X", ylab = "Densidad")
hist(y)
hist(y, pch=10, breaks=50, prob=TRUE, main="Perdidas_economicas",
xlab =" X", ylab = "Densidad")
dmixgampar <- function(y, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
skewness(y)
kurtosis(y)
kurtosis(y)
skewness(y)
skewness(y)#Este es el coeficiente de asimetría
#valor de 4.301659 existe asimetría en la distribución de los datos
kurtosis(y) #
table(y)
quantile(y,probs=c(0.05, 0.95))
quantile(y,seq(0,1, 0.20))
quantile(y,seq(0.9,1, 0.01))
fgam<-fitdist(y, 'gamma',lower=0)
fgam
plot(fgam)
fpar<- fitdist(x, 'pareto', lower= 0)
fpar
fpar<- fitdist(y, 'pareto', lower= 0)
fpar
plot(fpar)
fmixgampar <- fitdist(x, "mixgampar", lower=0)
fmixgampar <- fitdist(y, "mixgampar", lower=0)
fmixgampar <- fitdist(y, "mixgampar", lower=0)
fmixgampar
fburr <- fitdist(y, "burr", start=list(shape1=2, shape2=2, scale=2),
lower=c(0.1,1/2, 0))
fburr$estimate
FDD=cdfcomp(list(fgam, fpar, fburr), xlogscale=TRUE,
ylab = "Probabilidad", datapch=".",
datacol="red", fitcol="black", fitlty=2:5,
legendtext=c("gamma","Pareto", "Par-gam", "Burr"),
main="Ajuste p?rdidas legales", plotstyle = "ggplot")
FDD
FDD=cdfcomp(list(fgam, fpar, fburr), xlogscale=TRUE,
ylab = "Probabilidad", datapch=".",
datacol="red", fitcol="black", fitlty=2:5,
legendtext=c("gamma","Pareto", "Par-gam", "Burr"),
main="Ajuste perdidas legales", plotstyle = "ggplot")
FDD
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
fmixgampar <- fitdist(x, "mixgampar",
start=list(prob=1/2, nu=1, lambda=1, alpha=2,
theta=2), lower=0)
dmixgampar <- function(y, prob, nu, lambda, alpha, theta)
prob*dgamma(y, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
fmixgampar <- fitdist(x, "mixgampar",
start=list(prob=1/2, nu=1, lambda=1, alpha=2,
theta=2), lower=0)
fmixgampar <- fitdist(y, "mixgampar",
start=list(prob=1/2, nu=1, lambda=1, alpha=2,
theta=2), lower=0)
fmixgampar
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
fmixgampar <- fitdist(y, "mixgampar",
start=list(prob=1/2, nu=1, lambda=1, alpha=2,
theta=2), lower=0)
fmixgampar
fburr <- fitdist(y, "burr", start=list(shape1=2, shape2=2, scale=2),
lower=c(0.1,1/2, 0))
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
fmixgampar <- fitdist(y, "mixgampar",
start=list(prob=1/2, nu=1, lambda=1, alpha=2,
theta=2), lower=0)
fmixgampar
FDD=cdfcomp(list(fgam, fpar, fburr), xlogscale=TRUE,
ylab = "Probabilidad", datapch=".",
datacol="red", fitcol="black", fitlty=2:5,
legendtext=c("gamma","Pareto", "Par-gam", "Burr"),
main="Ajuste perdidas legales", plotstyle = "ggplot")
library(ggplot2)
library(MASS)
library(moments)
library(fitdistrplus)
library(actuar)
datos <- read.csv('BD_BUSINESS UNIT (1).csv', header = FALSE)
datos
str(datos)
ggplot(datos,aes(V1))+geom_histogram()
##Como podemos observar existen 4 outliers
boxplot(datos)
##Como podemos observar la media y la mediana difieren por tanto podemos deducir que existen valores extremos
summary(datos)
#No tenemos valores faltantes
anyNA(datos)
skewness(datos)
kurtosis(datos)
hist(datos$V1, pch=10, breaks=50, prob=TRUE, main="Fraudes",
xlab =" X", ylab = "Densidad")
x <- datos$V1
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
fgam <- fitdist(x, "gamma", lower=0)
fgam
fpar <- fitdist(x, "pareto",lower=0)
fpar
cbind(SINGLE= c(NA, fgam$estimate, fpar$estimate))
fburr <- fitdist(x, "burr", start=list(shape1=2, shape2=2, scale=2),
lower=c(0.1,1/2, 0))
fburr$estimate
FDD=cdfcomp(list(fgam, fpar,fburr), xlogscale=TRUE,
ylab = "Probabilidad", datapch=".",
datacol="red", fitcol="black", fitlty=2:5,
legendtext=c("gamma","Pareto", "Burr"),
main="Ajuste p?rdidas legales", plotstyle = "ggplot")
FDD
hist(x, pch=10, breaks=100, prob=TRUE, main="PERDIDAS LEGALES EN EUROS",
xlab =" X", ylab = "Densidad")
curve(dburr(x, fburr$estimate[1],fburr$estimate[2], fburr$estimate[3]),
col="red", lwd=2, add=T)
## qqplot con normal
qqnorm(x)
qqline(x, col="red")
qmixgampar <- function(p, prob, nu, lambda, alpha, theta)
{L2 <- function(q, p)
(p - pmixgampar(q, prob, nu, lambda, alpha, theta))^2
sapply(p, function(p) optimize(L2, c(0, 10^3), p=p)$minimun)
}
ppcomp(list(fgam, fpar, fburr), xlogscale=TRUE, ylogscale=TRUE,
ylab="probabilidades emp?ricas", xlab="probabilidades te?ricas", fitcol="blue",
main="PP-plot sobre p?rdidas", legendtext=c("gamma", "Pareto", "Par-gam", "Burr"),
plotstyle = "ggplot", fitpch=1:4)
qqcomp(list(fgam, fpar,fburr), xlogscale=TRUE, ylogscale=TRUE,
ylab="cuantiles emp?ricos", xlab="cuantiles te?ricos",
fitcol="black", main="QQ-plot sobre p?rdidas", addlegend = TRUE,
legendtext=c("gamma", "Pareto","Par-gam", "Burr"), fitpch=1:4)
datos <- read.csv('BD_BUSINESS UNIT (1).csv', header = FALSE)
datos
str(datos)
ggplot(datos,aes(V1))+geom_histogram()
##Como podemos observar existen 4 outliers
boxplot(datos)
##Como podemos observar la media y la mediana difieren por tanto podemos deducir que existen valores extremos
summary(datos)
#No tenemos valores faltantes
anyNA(datos)
skewness(datos)
kurtosis(datos)
hist(datos$V1, pch=10, breaks=50, prob=TRUE, main="Perdidas de la empresa",
xlab =" X", ylab = "Densidad")
dmixgampar <- function(x, prob, nu, lambda, alpha, theta)
prob*dgamma(x, nu, lambda) + (1-prob)*dpareto(x, alpha, theta)
pmixgampar <- function(q, prob, nu, lambda, alpha, theta)
prob*pgamma(q, nu, lambda) + (1-prob)*ppareto(q, alpha, theta)
fgam <- fitdist(x, "gamma", lower=0)
fgam
fpar <- fitdist(x, "pareto",lower=0)
fpar
cbind(SINGLE= c(NA, fgam$estimate, fpar$estimate))
fburr <- fitdist(x, "burr", start=list(shape1=2, shape2=2, scale=2),
lower=c(0.1,1/2, 0))
fburr$estimate
FDD=cdfcomp(list(fgam, fpar,fburr), xlogscale=TRUE,
ylab = "Probabilidad", datapch=".",
datacol="red", fitcol="black", fitlty=2:5,
legendtext=c("gamma","Pareto", "Burr"),
main="Ajuste p?rdidas legales", plotstyle = "ggplot")
FDD
hist(x, pch=10, breaks=100, prob=TRUE, main="PERDIDAS LEGALES EN EUROS",
xlab =" X", ylab = "Densidad")
curve(dburr(x, fburr$estimate[1],fburr$estimate[2], fburr$estimate[3]),
col="red", lwd=2, add=T)
PLOT(fgam)
plot(fgam)
plot(fpar)
## qqplot con normal
qqnorm(x)
qqline(x, col="red")
qmixgampar <- function(p, prob, nu, lambda, alpha, theta)
{L2 <- function(q, p)
(p - pmixgampar(q, prob, nu, lambda, alpha, theta))^2
sapply(p, function(p) optimize(L2, c(0, 10^3), p=p)$minimun)
}
ppcomp(list(fgam, fpar, fburr), xlogscale=TRUE, ylogscale=TRUE,
ylab="probabilidades emp?ricas", xlab="probabilidades te?ricas", fitcol="blue",
main="PP-plot sobre p?rdidas", legendtext=c("gamma", "Pareto", "Par-gam", "Burr"),
plotstyle = "ggplot", fitpch=1:4)
qqcomp(list(fgam, fpar,fburr), xlogscale=TRUE, ylogscale=TRUE,
ylab="cuantiles emp?ricos", xlab="cuantiles te?ricos",
fitcol="black", main="QQ-plot sobre p?rdidas", addlegend = TRUE,
legendtext=c("gamma", "Pareto","Par-gam", "Burr"), fitpch=1:4)
